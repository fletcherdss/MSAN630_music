nrow(subset(white, white$inc == ">$10,000"))
y <- ggplot(white, aes(x = inc))
y <- y + geom_histogram(fill = "white")
y <- y + geom_histogram(data = black_aa, aes(x = inc, fill = "blue"))
y <- y + geom_histogram(data = mixed, aes(x = inc, fill = "green"))
y <- y + geom_histogram(data = native, aes(x = inc, fill = "purple"))
y <- y + geom_histogram(data = asian, aes(x = inc, fill = "red"))
y
other <- subset(other, other["inc"] != "<NA>")
rnow(other)
nrow(other)
other
nrow(black_aa)
black_aa$inc
white <- subset(p, p["race"] == "White")
white <- subset(white, white["inc"] != "<NA>")
black_aa <- subset(p, p["race"] == "Black or African-American")
black_aa <- subset(black_aa, black_aa["inc"] != "<NA>")
mixed <- subset(p, p["race"] == "Mixed race")
mixed <- subset(mixed, mixed["inc"] != "<NA>")
native <- subset(p, p["race"] == "Native American/American Indian")
native <- subset(native, native["inc"] != "<NA>")
asian <- subset(p, p["race"] == "Asian or Pacific Islander")
asian <- subset(asian, asian["inc"] != "<NA>")
other <- subset(p, p["race"] == "Other (SPECIFY)")
other <- subset(other, other["inc"] != "<NA>")
inc_levels <- c("<$10,000", "$10,000-$20,000", "$20,000-$30,000", "$30,000-$40,000", "$40,000-$50,000", "$50,000-$75,000", "$75,000-$100,000", "$100,000-$150,000", "$150,000+", "<NA>")
levels(p$inc) <- inc_levels
pna <- subset(p, p$inc != "<NA>")
pna <- subset(p, p$race != "<NA>")
ggplot(pna, aes(x = inc)) + geom_histogram(color = race)
ggplot(pna, aes(x = inc, fill = race)) + geom_histogram()
ggplot(pna, aes(x = inc, fill = race)) + geom_density()
inc_levels <- c("5000", "15000", "25000", "35000", "45000", "62500", "87500", "125000", "150000", "<NA>")
levels(p$inc) <- inc_levels
pna <- subset(p, p$race != "<NA>")
pna <- subset(p, p$inc != "<NA>")
levels(p$race)
levels(p$race)[7] <- "<NA>"
levels(p$race)
pna <- subset(pna, pna$race != "<NA>")
as.integer("15")
for (i in 1:nrow(pna)){pna["inc"][i,] = as.integer(pna["inc"][i,])}
warnings()
levels(pna$inc)
inc_levels <- c("5000", "15000", "25000", "35000", "45000", "62500", "87500", "125000", "150000", "<NA>")
levels(p$inc) <- inc_levels
pna <- subset(p, p$inc != "<NA>")
pna <- subset(pna, pna$race != "<NA>")
head(pna$inc)
head(pna$race, pna$inc)
ggplot(pna, aes(x = inc, color = race)) + geom_density()
ggplot(pna, aes(x = inc, fille = race)) + geom_density()
ggplot(pna, aes(x = inc, fill = race)) + geom_density()
ggplot(p, aes(x = inc, y = age)) + boxplot(fill = inc)
ggplot(p, aes(x = inc, y = age, fill = inc)) + boxplot()
names(p)
ggplot(p, aes(x = cregion, y = age, fill = cregion)) + geom_boxplot()
ggplot(p, aes(x = iphoneuse, y = age, fill = iphoneuse)) + geom_boxplot()
ggplot(p, aes(x = emp, y = age, fill = emp)) + geom_boxplot()
p <- subset(p, age < 99)
ggplot(p, aes(x = emp, y = age, fill = emp)) + geom_boxplot()
ggplot(p, aes(x = emp, y = age, fill = race)) + geom_boxplot()
pt <- subset(p, p$race != "<NA>")
ggplot(pt, aes(x = emp, y = age, fill = race)) + geom_boxplot()
levels(p$emp)
levels(p$emp)[8] <- "<NA>"
levels(pt$emp)[8] <- "<NA>"
ggplot(pt, aes(x = emp, y = age, fill = race)) + geom_boxplot()
pt <- subset(pt, pt$emp != "<NA>")
ggplot(pt, aes(x = emp, y = age, fill = race)) + geom_boxplot()
nrow(subset(pt, pt$race == "Native American/American Indian"))
nrow(pt)
ggplot(pt, aes(x = inc, y = age, fill = race)) + geom_boxplot()
levels(p$sex)
ggplot(pt, aes(x = inc, y = age, fill = sex)) + geom_boxplot()
ps <- subset(p, p$inc != "<NA>")
ggplot(ps, aes(x = inc, y = age, fill = sex)) + geom_boxplot()
names(p)
ggplot(ps, aes(x = iphoneuse, y = age, fill = sex)) + geom_boxplot()
ggplot(ps, aes(x = educ, y = age, fill = sex)) + geom_boxplot()
pin <- subset(p, p$inc != "<NA>")
pin <- subset(pin, p$race, != "<NA>")
pin <- subset(pin, p$race != "<NA>")
ggplot(pin, aes(x = inc, fill = race)) + geom_bar()
pin <- subset(pin, p$inc != "<NA>")
ggplot(pin, aes(x = inc, fill = race)) + geom_bar()
pin <- subset(pin, pin$inc != "<NA>")
ggplot(pin, aes(x = inc, fill = race)) + geom_bar()
ggplot(pin, aes(x = inc, fill = race)) + geom_bar() + scale_y_continuous(labels = "percent")
pin1 <- subset(pin, pin$inc == levels(pin$inc)[1])
pin2 <- subset(pin, pin$inc == levels(pin$inc)[2])
pin3 <- subset(pin, pin$inc == levels(pin$inc)[3])
pin4 <- subset(pin, pin$inc == levels(pin$inc)[4])
pin5 <- subset(pin, pin$inc == levels(pin$inc)[5])
length(levels(pin$inc))
pin6 <- subset(pin, pin$inc == levels(pin$inc)[6])
pin7 <- subset(pin, pin$inc == levels(pin$inc)[7])
pin8 <- subset(pin, pin$inc == levels(pin$inc)[8])
pin9 <- subset(pin, pin$inc == levels(pin$inc)[9])
pin10 <- subset(pin, pin$inc == levels(pin$inc)[10])
p1 <- ggplot(pin1, aes(x = inc, fill = race)) + geom_bar()
p1
p1 <- ggplot(pin1, aes(x = race, fill = race)) + geom_bar()
p1
white <- subset(p, p["race"] == "White")
nrow(white)
names(p)
ggplot(p, aes( x = q6a, fill = sex)) + geom_bar()
ggplot(p, aes(x = race, y = age)) + geom_boxplot()
library(foreign)
library(ggplot2)
#datapath <- "~/teaching/EDA_2014/grading/"
datapath <- "/Users/Aluminum/Documents/Exploratory Data Analysis/Homework 5/"
p <- read.spss(paste(datapath, "Omnibus_Nov_2010_Paid_Content.sav", sep = ""))
p <- data.frame(p)
p <- subset(p, age < 99)
# Boxplot of education and age
educ_levels <- c("G1-8", "G9-11", "High School/GED", "Tech. College", "Some College", "College", "Post Grad", "<NA>")
levels(p$educ) <- educ_levels
levels(p$race)[7] <- "<NA>"
pr <- subset(p, p$race != "<NA>")
age_plt <- ggplot(pr, aes(x = race, y = age, fill = race))
age_plt <- age_plt + geom_bar()
plot(age_plt)
levels(p$race)[7] <- "<NA>"
pr <- subset(p, p$race != "<NA>")
age_plt <- ggplot(pr, aes(x = race, y = age, fill = race))
age_plt <- age_plt + geom_bar()
age_plt
age_plt <- age_plt + geom_boxplot()
plot(age_plt)
age_plt <- age_plt + xlab("Race") + ylab("Age")
plot(age_plt)
update.packages()
library(ggplot2)
plot(x = c(3.69, 3.79, 3.72, 3.72), y = c(32, 33, 35, 28))
lm1 <- lm(c(32, 33, 35, 28)~c(3.69, 3.79, 3.72, 3.72))
plot(x = c(3.69, 3.79, 3.72, 3.72), y = c(32, 33, 35, 28)) + abline(lm1[[1]][[2]], lm[[1]][[1]])
plot(x = c(3.69, 3.79, 3.72, 3.72), y = c(32, 33, 35, 28)) + abline(lm1[[1]][[2]], lm1[[1]][[1]])
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66), y = c(32, 33, 35, 28, 30, 28))
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.69), y = c(32, 33, 35, 28, 30, 28, 31))
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31))
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31), xlab = 'Price (Dollar per Gallon)', ylab = 'Performance (Mile per Gallon'), main = '2. c) Price of Gasoline Does Not Correlate with Efficiency')
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31), xlab = 'Price (Dollar per Gallon)', ylab = 'Performance (Mile per Gallon'), main = '2. c) Price of Gasoline Does Not Correlate with Efficiency')
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31), xlab = 'Price (Dollar per Gallon)', ylab = 'Performance (Mile per Gallon'))
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31), xlab = 'Price (Dollar per Gallon)', ylab = 'Performance (Mile per Gallon)', main = '2. c) Price of Gasoline Does Not Correlate with Efficiency')
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31), xlab = 'Price (Dollar per Gallon)', ylab = 'Performance (Mile per Gallon)', main = '2. c) Gasoline Price Does Not Correlate with Efficiency')
plot(x = c(3.69, 3.79, 3.72, 3.72, 3.82, 3.66, 3.68), y = c(32, 33, 35, 28, 30, 28, 31), xlab = 'Price (Dollar per Gallon)', ylab = 'Performance (Mile per Gallon)', main = '2.c) Gasoline Price Does Not Correlate with Efficiency')
bar(x = c('1', '2', '3', '4', '5', '6'), y = c(33, 34, 35, 31, 32, 31))
barchart(x = c('1', '2', '3', '4', '5', '6'), y = c(33, 34, 35, 31, 32, 31))
barplot(x = c('1', '2', '3', '4', '5', '6'), y = c(33, 34, 35, 31, 32, 31))
barplot(c(33, 34, 35, 31, 32, 31))
div <- c(33, 34, 35, 31, 32, 31)
div <- as.data.frame(div)
div
barplot(div)
barplot(div$div)
barplot(div$div, xlab = 'Divisions', ylab = 'Turnover Rate (%)', main = '2.d) Similar Turnover Rates in All Divisions')
barplot(div$div, ylab = 'Turnover Rate (%)', main = '2.d) Similar Turnover Rates in All Divisions')
install.packages('rpart')
install.packages('caret')
packages.install('rpart')
package.install('rpart')
install.package('rpart')
install.packages('rpart')
install.packages('tree')
update.packates()
update.packages()
library(rattle)
install.packages('rattle')
library(rattle)
library(tree)
library(rpart)
ds <- weather
summary(weather)
head(weather)
target <- "RainTomorrow"
nobs   <- nrow(ds)
form   <- formula(paste(target, "~ ."))
samp_size <- floor(0.8 * nobs)
set.seed(42)
train_idx <- sample(seq_len(nrow(ds)),size=samp_size)
drop_vars   <- -c(1,2,23) #variables to remove
ds <- ds[,drop_vars]
head(ds)
train <- ds[train_idx,]
test <- ds[-train_idx,]
model  <- rpart(form, train, parms=list(split="information"))
model
plot(model)  #just builds branches
text(model)  #puts the labels on
fancyRpartPlot(model)
install.packages(rpart)
install.packages('rpart')
install.packages("rpart")
install.packages("rpart")
install.packages('rpart.plot')
library(rpart.plot)
fancyRpartPlot(model)
?rpart.plot
summary(model)
preds <- predict(model, data=test)
preds[1]
preds[1:5]
test[1:5, 'RainTomorrow']
head(preds)
install.packages('foreign')
install.packages('xlsx')
install.packages('reshape2')
install.packages('GGally')
15*17*(.3**2/14 + .15**2/13 + 0.1**2/12 + 0.05**2/11)
install.packages('dplyr')
?data.table
install.packages('data')
install.packages('data.table')
9/14*2*7/9*2/9 + 5/14*2*3/5*2/5
9/14*2*6/9*3/9 + 5/14*2*3/5*2/5
4/14*2*3/4*1/4 + 6/14*2*4/6*2/6 + 4/14*2*2/4*2/4
4/14*2*3/4*1/4 + 10/14*2*6/10*
4/10
4/14*2*3/4*1/4 + 10/14*2*6/10*4/10
6/14*2*3/6*3/6 + 8/14*2*6/8*2/8
library(foreign)
library(xlsx)
library(reshape2)
library(ggplot2)
library(GGally)
library(rattle)
library(tree)
library(rpart)
head(iris)
head(digits)
head(digitstoy)
head(digits_toy)
head(digitsToy)
sklearn.datasets.load_digits(n_class=10)
install.packages('sklearn')
install.packages('scikit-learn')
install.packages('scikitlearn')
install.packages('sklearn.datasets')
head(digits(n_class=10))
head(digits[n_class=10])
library(polyroot)
?grep
runif(6, 1, 2)
sample(1:2, 6)
sample(1:2)
sample(1:2)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 6, replace = T)
sample(1:2, 6, replace = T)
sample(1:2, 6, replace = T)
sqrt(0.5**2 + 3.5**2)
update.program()
program.update()
update.programs()
install.packages()
update.packages()
?lm
?glm
164**2
(1-0.02)**2
164*.9604
(164*.9604)**2
(0.02*0.97 + 0.03*0.98)*(164**2)
((0.02*0.97 + 0.03*0.98)*(164))**2
((0.02*0.95 + 0.05*0.98)*(1.64/0.03))**2
(0.02*0.95 + 0.05*0.98)*((1.64/0.03)**2)
library(Hmisc)
library(data.table)
library(dplyr)
library(lubridate)
library(stringi)
library(stringr)
library(caret)
library(ggplot2)
library(ade4)
library(stats)
library(FactoMineR)
setwd('/Users/Aluminum/Documents/Machine Learning/MSAN630_music/data')
users <- fread('users_pretty_dummy.csv')
users <- data.frame(select(users, -1))
users.pcaQs <- PCA(users[2:20])
names(users)
users.pcaQs <- PCA(users[3:21])
users.pcaQs$imp
summary(users.pcaQs)
users.pcaQs
users.pcaQs$ind
users.pcaQs
users.pcaQs$var
users.pca <- PCA(users[2:87])
users.pca$var
summary(users.pca)
names(users)
users.pcaLIST_BACK <- PCA(users[70:88])
summary(users.pcaLIST_BACK)
users.pcaLIST_OWN <- PCA(users[51:69])
summary(users.pcaLIST_BACK)
users.pcaREGION <- PCA(users[38:44])
summary(users.pcaREGION)
users.pca
users.pca$call$col.w
users.pcaLIST_BACK$call$col.w
pca <- dudi.pca(users[2:87])
?dudi.pca
users <- fread('users.csv')
no = c('')
zero = c('0', '0 Hours', 'Less than an hour')
one = c('1', '1 hour')
two = c('2', '2 hours')
three = c('3', '3 hours')
four = c('4', '4 hours')
five = c('5', '5 hours')
six = c('6', '6 hours')
seven = c('7', '7 hours')
eight = c('8', '8 hours')
nine = c('9', '9 hours')
ten = c('10', '10 hours')
eleven = c('11', '11 hours')
twelve = c('12', '12 hours')
thirteen = c('13', '13 hours')
fourteen = c('14', '14 hours')
fifteen = c('15', '15 hours')
sixteen = c('16', '16 hours')
sixteenPlus = c('16+ hours', 'More than 16 hours', '17', '18', '19', '20', '21', '22', '23', '24')
lono <- filter(users, LIST_OWN %in% no)
lo00 <- filter(users, LIST_OWN %in% zero)
lo00 <- mutate(lo00, LIST_OWN = 0)
lo01 <- filter(users, LIST_OWN %in% one)
lo01 <- mutate(lo01, LIST_OWN = 1)
lo02 <- filter(users, LIST_OWN %in% two)
lo02 <- mutate(lo02, LIST_OWN = 2)
lo03 <- filter(users, LIST_OWN %in% three)
lo03 <- mutate(lo03, LIST_OWN = 3)
lo04 <- filter(users, LIST_OWN %in% four)
lo04 <- mutate(lo04, LIST_OWN = 4)
lo05 <- filter(users, LIST_OWN %in% five)
lo05 <- mutate(lo05, LIST_OWN = 5)
lo06 <- filter(users, LIST_OWN %in% six)
lo06 <- mutate(lo06, LIST_OWN = 6)
lo07 <- filter(users, LIST_OWN %in% seven)
lo07 <- mutate(lo07, LIST_OWN = 7)
lo08 <- filter(users, LIST_OWN %in% eight)
lo08 <- mutate(lo08, LIST_OWN = 8)
lo09 <- filter(users, LIST_OWN %in% nine)
lo09 <- mutate(lo09, LIST_OWN = 9)
lo10 <- filter(users, LIST_OWN %in% ten)
lo10 <- mutate(lo10, LIST_OWN = 10)
lo11 <- filter(users, LIST_OWN %in% eleven)
lo11 <- mutate(lo11, LIST_OWN = 11)
lo12 <- filter(users, LIST_OWN %in% twelve)
lo12 <- mutate(lo12, LIST_OWN = 12)
lo13 <- filter(users, LIST_OWN %in% thirteen)
lo13 <- mutate(lo13, LIST_OWN = 13)
lo14 <- filter(users, LIST_OWN %in% fourteen)
lo14 <- mutate(lo14, LIST_OWN = 14)
lo15 <- filter(users, LIST_OWN %in% fifteen)
lo15 <- mutate(lo15, LIST_OWN = 15)
lo16 <- filter(users, LIST_OWN %in% sixteen)
lo16 <- mutate(lo16, LIST_OWN = 16)
loUp <- filter(users, LIST_OWN %in% sixteenPlus)
loUp <- mutate(loUp, LIST_OWN = 16)
users <- rbind(lono, lo00, lo01, lo02, lo03, lo04, lo05, lo06, lo07, lo08, lo09, lo10, lo11, lo12, lo13,
lo14, lo15, lo16, loUp)
users <- fread('users.csv')
users <- data.frame(users)
lono <- filter(users, LIST_OWN %in% no)
lo00 <- filter(users, LIST_OWN %in% zero)
lo00 <- mutate(lo00, LIST_OWN = 0)
lo01 <- filter(users, LIST_OWN %in% one)
lo01 <- mutate(lo01, LIST_OWN = 1)
lo02 <- filter(users, LIST_OWN %in% two)
lo02 <- mutate(lo02, LIST_OWN = 2)
lo03 <- filter(users, LIST_OWN %in% three)
lo03 <- mutate(lo03, LIST_OWN = 3)
lo04 <- filter(users, LIST_OWN %in% four)
lo04 <- mutate(lo04, LIST_OWN = 4)
lo05 <- filter(users, LIST_OWN %in% five)
lo05 <- mutate(lo05, LIST_OWN = 5)
lo06 <- filter(users, LIST_OWN %in% six)
lo06 <- mutate(lo06, LIST_OWN = 6)
lo07 <- filter(users, LIST_OWN %in% seven)
lo07 <- mutate(lo07, LIST_OWN = 7)
lo08 <- filter(users, LIST_OWN %in% eight)
lo08 <- mutate(lo08, LIST_OWN = 8)
lo09 <- filter(users, LIST_OWN %in% nine)
lo09 <- mutate(lo09, LIST_OWN = 9)
lo10 <- filter(users, LIST_OWN %in% ten)
lo10 <- mutate(lo10, LIST_OWN = 10)
lo11 <- filter(users, LIST_OWN %in% eleven)
lo11 <- mutate(lo11, LIST_OWN = 11)
lo12 <- filter(users, LIST_OWN %in% twelve)
lo12 <- mutate(lo12, LIST_OWN = 12)
lo13 <- filter(users, LIST_OWN %in% thirteen)
lo13 <- mutate(lo13, LIST_OWN = 13)
lo14 <- filter(users, LIST_OWN %in% fourteen)
lo14 <- mutate(lo14, LIST_OWN = 14)
lo15 <- filter(users, LIST_OWN %in% fifteen)
lo15 <- mutate(lo15, LIST_OWN = 15)
lo16 <- filter(users, LIST_OWN %in% sixteen)
lo16 <- mutate(lo16, LIST_OWN = 16)
loUp <- filter(users, LIST_OWN %in% sixteenPlus)
loUp <- mutate(loUp, LIST_OWN = 16)
users <- rbind(lono, lo00, lo01, lo02, lo03, lo04, lo05, lo06, lo07, lo08, lo09, lo10, lo11, lo12, lo13,
lo14, lo15, lo16, loUp)
lbno <- filter(users, LIST_BACK %in% no)
lb00 <- filter(users, LIST_BACK %in% zero)
lb00 <- mutate(lb00, LIST_BACK = 0)
lb01 <- filter(users, LIST_BACK %in% one)
lb01 <- mutate(lb01, LIST_BACK = 1)
lb02 <- filter(users, LIST_BACK %in% two)
lb02 <- mutate(lb02, LIST_BACK = 2)
lb03 <- filter(users, LIST_BACK %in% three)
lb03 <- mutate(lb03, LIST_BACK = 3)
lb04 <- filter(users, LIST_BACK %in% four)
lb04 <- mutate(lb04, LIST_BACK = 4)
lb05 <- filter(users, LIST_BACK %in% five)
lb05 <- mutate(lb05, LIST_BACK = 5)
lb06 <- filter(users, LIST_BACK %in% six)
lb06 <- mutate(lb06, LIST_BACK = 6)
lb07 <- filter(users, LIST_BACK %in% seven)
lb07 <- mutate(lb07, LIST_BACK = 7)
lb08 <- filter(users, LIST_BACK %in% eight)
lb08 <- mutate(lb08, LIST_BACK = 8)
lb09 <- filter(users, LIST_BACK %in% nine)
lb09 <- mutate(lb09, LIST_BACK = 9)
lb10 <- filter(users, LIST_BACK %in% ten)
lb10 <- mutate(lb10, LIST_BACK = 10)
lb11 <- filter(users, LIST_BACK %in% eleven)
lb11 <- mutate(lb11, LIST_BACK = 11)
lb12 <- filter(users, LIST_BACK %in% twelve)
lb12 <- mutate(lb12, LIST_BACK = 12)
lb13 <- filter(users, LIST_BACK %in% thirteen)
lb13 <- mutate(lb13, LIST_BACK = 13)
lb14 <- filter(users, LIST_BACK %in% fourteen)
lb14 <- mutate(lb14, LIST_BACK = 14)
lb15 <- filter(users, LIST_BACK %in% fifteen)
lb15 <- mutate(lb15, LIST_BACK = 15)
lb16 <- filter(users, LIST_BACK %in% sixteen)
lb16 <- mutate(lb16, LIST_BACK = 16)
lbUp <- filter(users, LIST_BACK %in% sixteenPlus)
lbUp <- mutate(lbUp, LIST_BACK = 16)
users <- rbind(lbno, lb00, lb01, lb02, lb03, lb04, lb05, lb06, lb07, lb08, lb09, lb10, lb11, lb12, lb13,
lb14, lb15, lb16, lbUp)
write.csv(users, 'users_int.csv')
summary(users)
users$LIST_OWN <- as.integer(users$LIST_OWN)
summary(users)
users$LIST_BACK <- as.integer(users$LIST_BACK)
write.csv(users, 'users_int.csv')
summary(users)
unique(users$GENDER)
male <- filter(users, GENDER == 'Male')
head(male)
female <- filter(users, GENDER == 'Female')
male$GENDER = 1
female$GENDER = 0
users <- rbind(male, female)
summary(users)
write.csv(users, 'users_int.csv')
names(users)
users.pca <- PCA(users[2:27])
users <- data.frame(users)
users.pca <- PCA(users[2:27])
summary(users.pca)
library(Hmisc)
library(data.table)
library(dplyr)
library(lubridate)
library(stringi)
library(stringr)
library(caret)
library(ggplot2)
library(ade4)
library(stats)
library(FactoMineR)
upca <- PCA(upca[2:27])
upca <- PCA(users[2:27])
dum <- acm.disjonctif(users[c('WORKING', 'REGION', 'MUSIC')])
names(users)
nodum <- select(users, -c(4:6))
users <- cbind(nodum, dum)
write.csv(users, 'users_int.csv')
pca <- PCA(users[2:51])
names(users)
pcaWORKING <- PCA(users[25:38])
pcaREGION <- PCA(users[40:45])
pcaMUSIC <- PCA(users[46:51])
summary(pcaWORKING)
summary(pcaREGION)
summary(pcaMUSIC)
summary(pca)
summary(pcaWORKING)
summary(pcaREGION)
names(users)
pcaREGION <- PCA(users[39:45])
summary(pcaREGION)
pcaOther <- PCA(users[2:24])
summary(pcaOther)
names(users)
pcaQs <- PCA(users[6:24])
summary(pcaQs)
pcaOther2 <- PCA(users[2:5])
summary(pcaOther2)
